basePath: /api/v1
definitions:
  models.Account:
    properties:
      accountId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      login:
        type: string
      password:
        type: string
      surname:
        type: string
    type: object
  requests.CreateAccountRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      password:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  requests.ResetPasswordRequest:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    type: object
  responses.ErrorResponse:
    properties:
      code:
        type: integer
      description:
        type: string
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: headleysj@gmail.com
    name: Simon Headley
    url: None
  description: Provides basic functionality to perform operations against accounts.
  license:
    name: None
    url: None
  title: Account API
  version: 1.0.0
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: Creates an account for a new user if the account doesn't already
        exist.
      parameters:
      - description: The payload require to create the account.
        in: body
        name: createAccountRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateAccountRequest'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Account'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
      summary: Exposes functionality to create a new account.
  /accounts/id/{accountId}:
    get:
      description: Based off the given account identifier in the URI, the account
        details are looked up.
      parameters:
      - description: The user's account identifier returned on login.
        in: path
        name: accountId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
      summary: Exposes functionality to fetch the details of an account once a user
        has logged in.
    patch:
      description: Based on the account identifier and the current password, the system
        will attempt to update the user's password.
      parameters:
      - description: The user's account identifier.
        in: path
        name: accountId
        required: true
        type: string
      - description: The payload containing the existing password and the new password
          to be updated.
        in: body
        name: resetPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/requests.ResetPasswordRequest'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
      summary: Exposes functionality to reset a user's password.
  /accounts/login/{login}/password/{password}:
    get:
      description: Based off the login and password supplied, the system will attempt
        to fetch the details of a user's account.
      parameters:
      - description: The user's login.
        in: path
        name: login
        required: true
        type: string
      - description: The user's password that belongs to the login.
        in: path
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
            type: object
      summary: Exposes functionality to fetch the details of a user account when attempting
        to log in.
swagger: "2.0"
